#!/usr/bin/env perl

use strict;
use warnings;
use constant {
    'DEFAULT_PERL_VERSION' => '5.22.2',
};

use English    '-no_match_vars';
use Path::Tiny qw<path tempdir>;
use Getopt::Long qw<:config no_ignore_case>;
use App::Seacan;

sub print_help {
    my $error   = shift;
    my $min_ver = DEFAULT_PERL_VERSION();

    $error and print "[ERROR] $error\n\n";

    print << "_END_HELP";
$PROGRAM_NAME [--perl PERL_VER] --app-dir DIR

Options:

--perl        Perl version (default: $min_ver)
--app-dir     Application directory (default: .)
--files       Additional files for inclusion
              (Specify multiple times for each file)

_END_HELP

    exit 2;
}

my $app_dir = path('.');
Getopt::Long::GetOptions(
    'perl=s'    => \( my $perl_version = DEFAULT_PERL_VERSION() ),
    'app-dir=s' => \$app_dir,
    'files=s@'  => \my @additional_files,
    'help'      => \my $help,
);

$help and print_help();

-d $app_dir or print_help('--app-dir must point to a directory');

chomp( my $cores = `nproc` || 1 );

if ( $cores > 1 ) {
    $cores -= 1;
}

my @directories    = qw<bin lib>;
my $dest_dir       = tempdir( 'CLEANUP' => 1 );
my $source_dir_tmp = tempdir( 'CLEANUP' => 1 );
my $source_dir     = $source_dir_tmp->child('pakket');

$source_dir->mkpath();

# cpanfile must be there so "cpanm" would work on the app
for my $node ( @directories, @additional_files, 'cpanfile' ) {
    system( 'cp', '-R', path( $app_dir, $node ), $source_dir );
}

my $seacan = App::Seacan->new(
    config => {

        seacan => {
            app_name => 'pakket',
            output   => $dest_dir,
            app      => $source_dir,
        },

        perl => {
            version             => $perl_version,
                installed_as    => 'seacan',
                notest          => 1,
                noman           => 1,
                relocatable_INC => 1,
                parallel        => $cores,
        },
    },
);

$seacan->run;

system( 'tar', '--create', '--gzip', '--exclude-vcs', "--directory=$dest_dir",
    '--file=' . path('pakket.tar.gz')->absolute, '.', );
