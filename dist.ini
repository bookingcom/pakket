; vim: syntax=dosini foldmethod=marker
; man: Dist::Zilla

name             = Pakket
author           = Andrei Grechkin
author           = Eugene Chernenko
author           = Gonzalo Diethelm
author           = Mickey Nasriachi
author           = Sawyer X
copyright_holder = Sawyer X
copyright_year   = 2020
license          = MIT
main_module      = lib/Pakket.pm
version          = 3.023

; => basics ------------------------------------------------------------------------------------------------------ {{{1

[@Filter]
-bundle = @Basic
-remove = ConfirmRelease
-remove = UploadToCPAN

; This can replace the above "UploadToCPAN" remove
;[BlockRelease]

; => gather/prune ------------------------------------------------------------------------------------------------ {{{1

[@Git]
allow_dirty  = Changes
allow_dirty  = dist.ini
allow_dirty  = README.mkdn
add_files_in = Changes
add_files_in = dist.ini
add_files_in = README.mkdn

[MetaJSON]

[MetaProvides::Package]

[MetaResources]
homepage        = https://github.com/xsawyerx/pakket
bugtracker.web  = https://github.com/xsawyerx/pakket/issues
repository.url  = git://github.com/xsawyerx/pakket.git
repository.web  = https://github.com/xsawyerx/pakket
repository.type = git

[PkgVersion]
use_package = 1

[PruneFiles]
match = t/sessions/
match = dist.ini

[Encoding]
encoding = bytes
match    = t/corpus

[GatherFile]
filename = t/.perlcritic-history
filename = t/.perlcriticrc
filename = t/.perltidyrc

[PodWeaver]

[NextRelease]
filename = Changes

[ReadmeAnyFromPod / MarkdownInRoot]
filename = README.mkdn

; => restrictions ------------------------------------------------------------------------------------------------ {{{1

[MinimumPerl]

[EnsureNotStale]
check_all_plugins = 1
check_authordeps  = 1

; => prereqs ----------------------------------------------------------------------------------------------------- {{{1

[AutoPrereqs]
skip = ^Carp$
skip = ^Digest::MD5$
skip = ^English$
skip = ^Exporter$
skip = ^Fcntl$
skip = ^File::Path$
skip = ^File::Spec::Functions$
skip = ^File::Temp$
skip = ^List::Util$
skip = ^Sys::Hostname$
skip = ^autodie$
skip = ^constant$
skip = ^experimental$
skip = ^lib$
skip = ^open$
skip = ^parent$
skip = ^strict$
skip = ^warnings$

; runtime loaded modules have to be installed explicitly, Dzil cant autoguess them
[Prereqs]
Archive::Extract = 0
;MetaCPAN::Client = 0
LWP::Protocol::https = 0

[Prereqs / TestRequires]
Perl::Critic::Bangs = 0
Perl::Critic::Freenode = 0
Perl::Critic::Lax = 0
Perl::Critic::Moose = 0
Perl::Critic::Policy::Perlsecret = 0
Perl::Critic::Policy::TryTiny::RequireUse = 0
Perl::Critic::Pulp = 0
Perl::Critic::StricterSubs = 0
Perl::Critic::Tics = 0
Perl::Tidy = 20200110
Test2::Harness = 0
Test2::Suite = 0
Test::Perl::Critic::Progressive = 0

; Conflicting (doesn't allow to set different filename)
; [Prereqs::FromCPANfile]

[CPANFile]
filename = cpanfile
comment  = This file is generated by Dist::Zilla. Do not edit.

; => tests ------------------------------------------------------------------------------------------------------- {{{1

[MetaTests]
;[PodCoverageTests]
[PodSyntaxTests]
[Test::CPAN::Changes]
[Test::CleanNamespaces]
[Test::Compile]
[Test::DirectoryLayout]
[Test::EOF]
[Test::EOL]
[Test::NoBOM]
finder = :InstallModules
[Test::NoBreakpoints]
;[Test::Pod::LinkCheck]
[Test::PodSpelling]
;[Test::Portability]
[Test::ReportMetadata]
;[Test::Synopsis]
;[Test::TrailingSpace]
;[Test::UnusedVars]
[Test::TidyAll]
[Test::UseAllModules]
[Test::Version]
